{"ast":null,"code":"var _jsxFileName = \"/Users/gojiboy/Desktop/Bootcamp/Week-20/react-portfolio/src/components/pages/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../../styles/App.css';\nimport { checkPassword, validateEmail } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Contact() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleInputChange = e => {\n    // Getting the value and name of the input which triggered the change\n    let target = e.target;\n    let inputType = target.name;\n    let inputValue = target.value; // Based on the input type, we set the state of either email, username, and password\n\n    if (inputType === 'email') {\n      setEmail(inputValue);\n    } else if (inputType === 'userName') {\n      setUserName(inputValue);\n    } else setPassword(inputValue);\n  };\n\n  const handleFormSubmit = e => {\n    // Preventing the default behavior of the form submit (which is to refresh the page)\n    e.preventDefault();\n\n    if (!validateEmail(email) || !userName) {\n      setErrorMessage('Fill out email and username please!');\n    } else if (!checkPassword(password)) {\n      setErrorMessage(`Choose a more secure password for the account: ${userName}`);\n    } else {\n      alert(`Hello ${userName}`);\n    }\n\n    setUserName('');\n    setPassword('');\n    setEmail('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    form: true,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Hello \", userName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        name: \"email\",\n        onChange: handleInputChange,\n        type: \"email\",\n        placeholder: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: userName,\n        name: \"userName\",\n        onChange: handleInputChange,\n        type: \"text\",\n        placeholder: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        name: \"password\",\n        onChange: handleInputChange,\n        type: \"text\",\n        placeholder: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFormSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Contact, \"ovL9lfT5lJzjBkd8/ubtvVjsxkk=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/gojiboy/Desktop/Bootcamp/Week-20/react-portfolio/src/components/pages/Contact.js"],"names":["React","useState","checkPassword","validateEmail","Contact","email","setEmail","userName","setUserName","password","setPassword","errorMessage","setErrorMessage","handleInputChange","e","target","inputType","name","inputValue","value","handleFormSubmit","preventDefault","alert"],"mappings":"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","sourcesContent":["\nimport React, { useState } from 'react';\n\nimport '../../styles/App.css';\n\n\nimport { checkPassword, validateEmail } from '../../utils/helpers';\n\nfunction Contact() {\n \n  const [email, setEmail] = useState('');\n  const [userName, setUserName] = useState('');\n  \nconst [password,setPassword] =useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleInputChange = (e) => {\n    // Getting the value and name of the input which triggered the change\n    let target = e.target;\n    let inputType = target.name;\n    let inputValue = target.value;\n\n    // Based on the input type, we set the state of either email, username, and password\n    if (inputType === 'email') {\n      setEmail(inputValue);\n    } else if (inputType === 'userName') {\n      setUserName(inputValue);\n    }else setPassword(inputValue);\n  };\n\n  const handleFormSubmit = (e) => {\n    // Preventing the default behavior of the form submit (which is to refresh the page)\n    e.preventDefault();\n    if (!validateEmail(email) || !userName) {\n      setErrorMessage('Fill out email and username please!');\n    } else if (!checkPassword(password)) {\n      setErrorMessage(\n        `Choose a more secure password for the account: ${userName}`\n      );\n    } else {\n      alert(`Hello ${userName}`);\n    }\n\n    setUserName('');\n    setPassword('');\n    setEmail('');\n  };\n\n  return (\n    <div form>\n      <p>Hello {userName}</p>\n      <form className=\"form\">\n        <input\n          value={email}\n          name=\"email\"\n          onChange={handleInputChange}\n          type=\"email\"\n          placeholder=\"email\"\n        />\n        <input\n          value={userName}\n          name=\"userName\"\n          onChange={handleInputChange}\n          type=\"text\"\n          placeholder=\"username\"\n        />\n      \n        <input\n          value={password}\n          name=\"password\"\n          onChange={handleInputChange}\n          type=\"text\"\n          placeholder=\"password\"\n        />\n        <button onClick={handleFormSubmit}>Submit</button>\n      </form>\n      {errorMessage && (\n        <div>\n          <p className=\"error-text\">{errorMessage}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}